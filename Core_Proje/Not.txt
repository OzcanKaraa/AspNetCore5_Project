4 Katman:
---------
1-Entity Layer :Varliklar Skills About Education Property
2-Data Access Layer ; Crud (Create Read Update Delete) Method
					  N Tier katmanli Mimari -> Repository Design Pattern
3-Busineess Layer : Validasyon Katman kosullar ekleme NotEmpty MaxChar Minchar
4-Presentation Layer : Sunum Katmani Frontend Controller
---------------------------------------------------------------------------------------------------------
Entity Layer
Concrete : Class tanimlama
Absrtract :Interface
--------------------------------------------------------------------------------------------------------
AspNet Core (MVC) Solution ile Class Library .net olan 

1-Entity Layer katmanında class ile tanımlamalar yaptık.
 Tum klasorlere Entity framework core , Tool , Sqlserver ve Design paketleri yuklendi.
 KEY Ekleyerek Birinvil Anahtar tanimlandi.

2-DataAccess: Concrete class tanimlama

DATAACCESS Context class
Context class : 1- DB yapilandirma baglanti stringi  2-DB yansitilacak olan Tablolari tutan class
Sql Baglanti adresi ile 
DbSet ile class adı ve Tablo Adı ismi -s takisi ile veriliyor.Sql e tablo sutunu olarak eklenecek.
Migration: Entity Framework CodeFirst visual üzerinde oluşturulan sınıflar Sql de tablo olarak yansitilacak.
Packege console içine : 
1-DataAcces seçilip Bağnatı adres Context sınıfı mevcut.
  Migraiton olusturma :  "add-migration mig1" 
  Migraiton Çalıştırma :  "update-database"
  -----------------------------------------------------------------------------------------------------------

 @await Html.PartialAsync("HeaderPartial"); // IndexPartial cagirma islemi 

 ~/Template/


  @foreach(var item in Model)
        {}



		using BusinessLayer.Concrete;
using DataAccessLayer.EntityFramework;
using Microsoft.AspNetCore.Mvc;